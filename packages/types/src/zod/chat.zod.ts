// Generated by ts-to-zod
import { z } from "zod";

import {
  vADStateSchema,
  tokenCostSchema,
  memoryOperationSchema,
} from "./common.zod";
import { memoryRetrievalResultSchema } from "./memory.zod";

export const promptSectionsSchema = z.object({
  system: z.string(),
  working_memory: z.string(),
  episodic_memory: z.string(),
  semantic_archive: z.string(),
  user_query: z.string(),
  full_prompt: z.string(),
});

export const vADStateChangeSchema = z.object({
  character_id: z.string(),
  character_name: z.string(),
  previous_state: vADStateSchema,
  new_state: vADStateSchema,
  trigger: z.string(),
});

export const chatMessageSchema = z.object({
  id: z.string(),
  role: z.union([
    z.literal("user"),
    z.literal("assistant"),
    z.literal("system"),
  ]),
  content: z.string(),
  timestamp: z.string(),
  metadata: z
    .object({
      tokens: tokenCostSchema.optional(),
      processing_time: z.number().optional(),
      memory_operations: z.array(memoryOperationSchema).optional(),
      memory_retrieval: memoryRetrievalResultSchema.optional(),
      emotional_state_changes: z.array(vADStateChangeSchema).optional(),
      prompt_sections: promptSectionsSchema.optional(),
    })
    .optional(),
});

export const chatRequestSchema = z.object({
  message: z.string(),
  session_id: z.string().optional(),
  fusion_weights: z
    .object({
      w_L1: z.number(),
      w_L2: z.number(),
      w_L3: z.number(),
    })
    .optional(),
});

export const chatResponseSchema = z.object({
  id: z.string(),
  content: z.string(),
  session_id: z.string(),
  timestamp: z.string(),
  metadata: z.object({
    tokens: tokenCostSchema,
    processing_time: z.number(),
    memory_retrieval: memoryRetrievalResultSchema,
    memory_operations: z.array(memoryOperationSchema),
    emotional_state_changes: z.array(vADStateChangeSchema).optional(),
    prompt_sections: promptSectionsSchema.optional(),
  }),
});

export const chatSessionSchema = z.object({
  id: z.string(),
  messages: z.array(chatMessageSchema),
  created_at: z.string(),
  last_updated: z.string(),
  total_tokens: z.number(),
});
