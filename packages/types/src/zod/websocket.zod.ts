// Generated by ts-to-zod
import { z } from "zod";

export const webSocketMessageSchema = z.object({
  type: z.union([
    z.literal("subscribe_to_memory_operations"),
    z.literal("subscribe_to_emotional_changes"),
    z.literal("ping"),
    z.literal("memory_search"),
  ]),
  data: z.object({
    query: z.string().optional(),
    options: z.object({
      limit: z.number().optional(),
      k: z.number().optional(),
      threshold: z.number().optional(),
      includeMetadata: z.boolean().optional(),
    }).optional(),
  }).optional(),
  timestamp: z.string().optional(),
});

export const webSocketResponseSchema = z.object({
  type: z.union([
    z.literal("connection_established"),
    z.literal("subscription_confirmed"),
    z.literal("pong"),
    z.literal("error"),
    z.literal("memory_operation_update"),
    z.literal("emotional_change_update"),
  ]),
  subscription: z.string().optional(),
  message: z.string().optional(),
  timestamp: z.string(),
  data: z.unknown().optional(),
});