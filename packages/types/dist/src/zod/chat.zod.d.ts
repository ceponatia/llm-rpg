import { z } from "zod";
export declare const promptSectionsSchema: z.ZodObject<{
    system: z.ZodString;
    working_memory: z.ZodString;
    episodic_memory: z.ZodString;
    semantic_archive: z.ZodString;
    user_query: z.ZodString;
    full_prompt: z.ZodString;
}, z.core.$strip>;
export declare const vADStateChangeSchema: z.ZodObject<{
    character_id: z.ZodString;
    character_name: z.ZodString;
    previous_state: z.ZodObject<{
        valence: z.ZodNumber;
        arousal: z.ZodNumber;
        dominance: z.ZodNumber;
    }, z.core.$strip>;
    new_state: z.ZodObject<{
        valence: z.ZodNumber;
        arousal: z.ZodNumber;
        dominance: z.ZodNumber;
    }, z.core.$strip>;
    trigger: z.ZodString;
}, z.core.$strip>;
export declare const chatMessageSchema: z.ZodObject<{
    id: z.ZodString;
    role: z.ZodUnion<readonly [z.ZodLiteral<"user">, z.ZodLiteral<"assistant">, z.ZodLiteral<"system">]>;
    content: z.ZodString;
    timestamp: z.ZodString;
    metadata: z.ZodOptional<z.ZodObject<{
        tokens: z.ZodOptional<z.ZodObject<{
            total_tokens: z.ZodNumber;
            l1_tokens: z.ZodNumber;
            l2_tokens: z.ZodNumber;
            l3_tokens: z.ZodNumber;
            estimated_cost: z.ZodNumber;
        }, z.core.$strip>>;
        processing_time: z.ZodOptional<z.ZodNumber>;
        memory_operations: z.ZodOptional<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            type: z.ZodUnion<readonly [z.ZodLiteral<"read">, z.ZodLiteral<"write">, z.ZodLiteral<"update">, z.ZodLiteral<"delete">]>;
            layer: z.ZodUnion<readonly [z.ZodLiteral<"L1">, z.ZodLiteral<"L2">, z.ZodLiteral<"L3">]>;
            operation: z.ZodString;
            timestamp: z.ZodString;
            duration_ms: z.ZodNumber;
            details: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, z.core.$strip>>>;
        memory_retrieval: z.ZodOptional<z.ZodObject<{
            l1: z.ZodObject<{
                turns: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    role: z.ZodUnion<readonly [z.ZodLiteral<"user">, z.ZodLiteral<"assistant">, z.ZodLiteral<"system">]>;
                    content: z.ZodString;
                    timestamp: z.ZodString;
                    tokens: z.ZodNumber;
                    character_id: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            l2: z.ZodObject<{
                characters: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    name: z.ZodString;
                    type: z.ZodLiteral<"Character">;
                    emotional_state: z.ZodObject<{
                        valence: z.ZodNumber;
                        arousal: z.ZodNumber;
                        dominance: z.ZodNumber;
                    }, z.core.$strip>;
                }, z.core.$strip>>;
                facts: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    entity: z.ZodString;
                    attribute: z.ZodString;
                    current_value: z.ZodString;
                    history: z.ZodArray<z.ZodObject<{
                        value: z.ZodString;
                        timestamp: z.ZodString;
                        confidence: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$strip>>;
                    importance_score: z.ZodNumber;
                }, z.core.$strip>>;
                relationships: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    from_entity: z.ZodString;
                    to_entity: z.ZodString;
                    relationship_type: z.ZodString;
                    strength: z.ZodNumber;
                    emotional_context: z.ZodOptional<z.ZodObject<{
                        valence: z.ZodNumber;
                        arousal: z.ZodNumber;
                        dominance: z.ZodNumber;
                    }, z.core.$strip>>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            l3: z.ZodObject<{
                fragments: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    embedding: z.ZodArray<z.ZodNumber>;
                    content: z.ZodString;
                    metadata: z.ZodObject<{
                        created_at: z.ZodString;
                        last_updated: z.ZodString;
                        last_accessed: z.ZodString;
                        access_count: z.ZodNumber;
                        importance_score: z.ZodNumber;
                        doc_id: z.ZodString;
                        source_session_id: z.ZodString;
                        content_type: z.ZodUnion<readonly [z.ZodLiteral<"summary">, z.ZodLiteral<"insight">, z.ZodLiteral<"event">]>;
                        tags: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    similarity_score: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            fusion_weights: z.ZodObject<{
                w_L1: z.ZodNumber;
                w_L2: z.ZodNumber;
                w_L3: z.ZodNumber;
            }, z.core.$strip>;
            final_score: z.ZodNumber;
            total_tokens: z.ZodNumber;
        }, z.core.$strip>>;
        emotional_state_changes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            character_id: z.ZodString;
            character_name: z.ZodString;
            previous_state: z.ZodObject<{
                valence: z.ZodNumber;
                arousal: z.ZodNumber;
                dominance: z.ZodNumber;
            }, z.core.$strip>;
            new_state: z.ZodObject<{
                valence: z.ZodNumber;
                arousal: z.ZodNumber;
                dominance: z.ZodNumber;
            }, z.core.$strip>;
            trigger: z.ZodString;
        }, z.core.$strip>>>;
        prompt_sections: z.ZodOptional<z.ZodObject<{
            system: z.ZodString;
            working_memory: z.ZodString;
            episodic_memory: z.ZodString;
            semantic_archive: z.ZodString;
            user_query: z.ZodString;
            full_prompt: z.ZodString;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const chatRequestSchema: z.ZodObject<{
    message: z.ZodString;
    session_id: z.ZodOptional<z.ZodString>;
    fusion_weights: z.ZodOptional<z.ZodObject<{
        w_L1: z.ZodNumber;
        w_L2: z.ZodNumber;
        w_L3: z.ZodNumber;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const chatResponseSchema: z.ZodObject<{
    id: z.ZodString;
    content: z.ZodString;
    session_id: z.ZodString;
    timestamp: z.ZodString;
    metadata: z.ZodObject<{
        tokens: z.ZodObject<{
            total_tokens: z.ZodNumber;
            l1_tokens: z.ZodNumber;
            l2_tokens: z.ZodNumber;
            l3_tokens: z.ZodNumber;
            estimated_cost: z.ZodNumber;
        }, z.core.$strip>;
        processing_time: z.ZodNumber;
        memory_retrieval: z.ZodObject<{
            l1: z.ZodObject<{
                turns: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    role: z.ZodUnion<readonly [z.ZodLiteral<"user">, z.ZodLiteral<"assistant">, z.ZodLiteral<"system">]>;
                    content: z.ZodString;
                    timestamp: z.ZodString;
                    tokens: z.ZodNumber;
                    character_id: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            l2: z.ZodObject<{
                characters: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    name: z.ZodString;
                    type: z.ZodLiteral<"Character">;
                    emotional_state: z.ZodObject<{
                        valence: z.ZodNumber;
                        arousal: z.ZodNumber;
                        dominance: z.ZodNumber;
                    }, z.core.$strip>;
                }, z.core.$strip>>;
                facts: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    entity: z.ZodString;
                    attribute: z.ZodString;
                    current_value: z.ZodString;
                    history: z.ZodArray<z.ZodObject<{
                        value: z.ZodString;
                        timestamp: z.ZodString;
                        confidence: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$strip>>;
                    importance_score: z.ZodNumber;
                }, z.core.$strip>>;
                relationships: z.ZodArray<z.ZodObject<{
                    created_at: z.ZodString;
                    last_updated: z.ZodString;
                    id: z.ZodString;
                    from_entity: z.ZodString;
                    to_entity: z.ZodString;
                    relationship_type: z.ZodString;
                    strength: z.ZodNumber;
                    emotional_context: z.ZodOptional<z.ZodObject<{
                        valence: z.ZodNumber;
                        arousal: z.ZodNumber;
                        dominance: z.ZodNumber;
                    }, z.core.$strip>>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            l3: z.ZodObject<{
                fragments: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    embedding: z.ZodArray<z.ZodNumber>;
                    content: z.ZodString;
                    metadata: z.ZodObject<{
                        created_at: z.ZodString;
                        last_updated: z.ZodString;
                        last_accessed: z.ZodString;
                        access_count: z.ZodNumber;
                        importance_score: z.ZodNumber;
                        doc_id: z.ZodString;
                        source_session_id: z.ZodString;
                        content_type: z.ZodUnion<readonly [z.ZodLiteral<"summary">, z.ZodLiteral<"insight">, z.ZodLiteral<"event">]>;
                        tags: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    similarity_score: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strip>>;
                relevance_score: z.ZodNumber;
                token_count: z.ZodNumber;
            }, z.core.$strip>;
            fusion_weights: z.ZodObject<{
                w_L1: z.ZodNumber;
                w_L2: z.ZodNumber;
                w_L3: z.ZodNumber;
            }, z.core.$strip>;
            final_score: z.ZodNumber;
            total_tokens: z.ZodNumber;
        }, z.core.$strip>;
        memory_operations: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            type: z.ZodUnion<readonly [z.ZodLiteral<"read">, z.ZodLiteral<"write">, z.ZodLiteral<"update">, z.ZodLiteral<"delete">]>;
            layer: z.ZodUnion<readonly [z.ZodLiteral<"L1">, z.ZodLiteral<"L2">, z.ZodLiteral<"L3">]>;
            operation: z.ZodString;
            timestamp: z.ZodString;
            duration_ms: z.ZodNumber;
            details: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, z.core.$strip>>;
        emotional_state_changes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            character_id: z.ZodString;
            character_name: z.ZodString;
            previous_state: z.ZodObject<{
                valence: z.ZodNumber;
                arousal: z.ZodNumber;
                dominance: z.ZodNumber;
            }, z.core.$strip>;
            new_state: z.ZodObject<{
                valence: z.ZodNumber;
                arousal: z.ZodNumber;
                dominance: z.ZodNumber;
            }, z.core.$strip>;
            trigger: z.ZodString;
        }, z.core.$strip>>>;
        prompt_sections: z.ZodOptional<z.ZodObject<{
            system: z.ZodString;
            working_memory: z.ZodString;
            episodic_memory: z.ZodString;
            semantic_archive: z.ZodString;
            user_query: z.ZodString;
            full_prompt: z.ZodString;
        }, z.core.$strip>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const chatSessionSchema: z.ZodObject<{
    id: z.ZodString;
    messages: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        role: z.ZodUnion<readonly [z.ZodLiteral<"user">, z.ZodLiteral<"assistant">, z.ZodLiteral<"system">]>;
        content: z.ZodString;
        timestamp: z.ZodString;
        metadata: z.ZodOptional<z.ZodObject<{
            tokens: z.ZodOptional<z.ZodObject<{
                total_tokens: z.ZodNumber;
                l1_tokens: z.ZodNumber;
                l2_tokens: z.ZodNumber;
                l3_tokens: z.ZodNumber;
                estimated_cost: z.ZodNumber;
            }, z.core.$strip>>;
            processing_time: z.ZodOptional<z.ZodNumber>;
            memory_operations: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                type: z.ZodUnion<readonly [z.ZodLiteral<"read">, z.ZodLiteral<"write">, z.ZodLiteral<"update">, z.ZodLiteral<"delete">]>;
                layer: z.ZodUnion<readonly [z.ZodLiteral<"L1">, z.ZodLiteral<"L2">, z.ZodLiteral<"L3">]>;
                operation: z.ZodString;
                timestamp: z.ZodString;
                duration_ms: z.ZodNumber;
                details: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, z.core.$strip>>>;
            memory_retrieval: z.ZodOptional<z.ZodObject<{
                l1: z.ZodObject<{
                    turns: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        role: z.ZodUnion<readonly [z.ZodLiteral<"user">, z.ZodLiteral<"assistant">, z.ZodLiteral<"system">]>;
                        content: z.ZodString;
                        timestamp: z.ZodString;
                        tokens: z.ZodNumber;
                        character_id: z.ZodOptional<z.ZodString>;
                    }, z.core.$strip>>;
                    relevance_score: z.ZodNumber;
                    token_count: z.ZodNumber;
                }, z.core.$strip>;
                l2: z.ZodObject<{
                    characters: z.ZodArray<z.ZodObject<{
                        created_at: z.ZodString;
                        last_updated: z.ZodString;
                        id: z.ZodString;
                        name: z.ZodString;
                        type: z.ZodLiteral<"Character">;
                        emotional_state: z.ZodObject<{
                            valence: z.ZodNumber;
                            arousal: z.ZodNumber;
                            dominance: z.ZodNumber;
                        }, z.core.$strip>;
                    }, z.core.$strip>>;
                    facts: z.ZodArray<z.ZodObject<{
                        created_at: z.ZodString;
                        last_updated: z.ZodString;
                        id: z.ZodString;
                        entity: z.ZodString;
                        attribute: z.ZodString;
                        current_value: z.ZodString;
                        history: z.ZodArray<z.ZodObject<{
                            value: z.ZodString;
                            timestamp: z.ZodString;
                            confidence: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$strip>>;
                        importance_score: z.ZodNumber;
                    }, z.core.$strip>>;
                    relationships: z.ZodArray<z.ZodObject<{
                        created_at: z.ZodString;
                        last_updated: z.ZodString;
                        id: z.ZodString;
                        from_entity: z.ZodString;
                        to_entity: z.ZodString;
                        relationship_type: z.ZodString;
                        strength: z.ZodNumber;
                        emotional_context: z.ZodOptional<z.ZodObject<{
                            valence: z.ZodNumber;
                            arousal: z.ZodNumber;
                            dominance: z.ZodNumber;
                        }, z.core.$strip>>;
                    }, z.core.$strip>>;
                    relevance_score: z.ZodNumber;
                    token_count: z.ZodNumber;
                }, z.core.$strip>;
                l3: z.ZodObject<{
                    fragments: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        embedding: z.ZodArray<z.ZodNumber>;
                        content: z.ZodString;
                        metadata: z.ZodObject<{
                            created_at: z.ZodString;
                            last_updated: z.ZodString;
                            last_accessed: z.ZodString;
                            access_count: z.ZodNumber;
                            importance_score: z.ZodNumber;
                            doc_id: z.ZodString;
                            source_session_id: z.ZodString;
                            content_type: z.ZodUnion<readonly [z.ZodLiteral<"summary">, z.ZodLiteral<"insight">, z.ZodLiteral<"event">]>;
                            tags: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        similarity_score: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$strip>>;
                    relevance_score: z.ZodNumber;
                    token_count: z.ZodNumber;
                }, z.core.$strip>;
                fusion_weights: z.ZodObject<{
                    w_L1: z.ZodNumber;
                    w_L2: z.ZodNumber;
                    w_L3: z.ZodNumber;
                }, z.core.$strip>;
                final_score: z.ZodNumber;
                total_tokens: z.ZodNumber;
            }, z.core.$strip>>;
            emotional_state_changes: z.ZodOptional<z.ZodArray<z.ZodObject<{
                character_id: z.ZodString;
                character_name: z.ZodString;
                previous_state: z.ZodObject<{
                    valence: z.ZodNumber;
                    arousal: z.ZodNumber;
                    dominance: z.ZodNumber;
                }, z.core.$strip>;
                new_state: z.ZodObject<{
                    valence: z.ZodNumber;
                    arousal: z.ZodNumber;
                    dominance: z.ZodNumber;
                }, z.core.$strip>;
                trigger: z.ZodString;
            }, z.core.$strip>>>;
            prompt_sections: z.ZodOptional<z.ZodObject<{
                system: z.ZodString;
                working_memory: z.ZodString;
                episodic_memory: z.ZodString;
                semantic_archive: z.ZodString;
                user_query: z.ZodString;
                full_prompt: z.ZodString;
            }, z.core.$strip>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>;
    created_at: z.ZodString;
    last_updated: z.ZodString;
    total_tokens: z.ZodNumber;
}, z.core.$strip>;
