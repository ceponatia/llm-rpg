// Generated by ts-to-zod
import { z } from "zod";
export const vADStateSchema = z.object({
    valence: z.number(),
    arousal: z.number(),
    dominance: z.number(),
});
export const timestampSchema = z.object({
    created_at: z.string(),
    last_updated: z.string(),
});
export const accessMetricsSchema = z.object({
    last_accessed: z.string(),
    access_count: z.number(),
});
export const importanceScoreSchema = z.object({
    importance_score: z.number(),
});
export const weightedMemoryFusionSchema = z.object({
    w_L1: z.number(),
    w_L2: z.number(),
    w_L3: z.number(),
});
export const tokenCostSchema = z.object({
    total_tokens: z.number(),
    l1_tokens: z.number(),
    l2_tokens: z.number(),
    l3_tokens: z.number(),
    estimated_cost: z.number(),
});
export const memoryOperationSchema = z.object({
    id: z.string(),
    type: z.union([
        z.literal("read"),
        z.literal("write"),
        z.literal("update"),
        z.literal("delete"),
    ]),
    layer: z.union([z.literal("L1"), z.literal("L2"), z.literal("L3")]),
    operation: z.string(),
    timestamp: z.string(),
    duration_ms: z.number(),
    details: z.record(z.string(), z.unknown()).optional(),
});
